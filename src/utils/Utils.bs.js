// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as Font$Expo from "reason-expo/src/Font.bs.js";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as ReactNative from "react-native";
import * as Belt_SortArray from "bs-platform/lib/es6/belt_SortArray.js";

function nullableToOption(stringOrNull) {
  return Promise.resolve(stringOrNull === null ? undefined : Caml_option.some(stringOrNull));
}

var namespace = "conf-in-box-";

var userNameToken = "conf-in-box-username";

var getToken = ReactNative.AsyncStorage.getItem(namespace);

var getUser = ReactNative.AsyncStorage.getItem(userNameToken);

function setToken(token) {
  return ReactNative.AsyncStorage.setItem(namespace, token);
}

function clearToken(param) {
  return ReactNative.AsyncStorage.removeItem(namespace);
}

var UserSession = {
  userNameToken: userNameToken,
  getToken: getToken,
  getUser: getUser,
  setToken: setToken,
  clearToken: clearToken
};

function sortCreatedBy(arr) {
  return Belt_Array.reverse(Belt_SortArray.stableSortBy(arr, (function (a1, a2) {
                    return Caml_obj.caml_compare(a1.createdAt, a2.createdAt);
                  })));
}

function getUsernameFromStorage(param) {
  return ReactNative.AsyncStorage.getItem("conf-in-box-username").then((function (user) {
                console.log("AsyncStorage.getItem: ", user);
                var usr = user === null ? undefined : Caml_option.some(user);
                console.log("AsyncStorage._USR: ", usr);
                return Promise.resolve(usr);
              }));
}

var loadFonts = Promise.resolve(Font$Expo.loadAsync(/* :: */[
          /* tuple */[
            "Gotham Rounded",
            require("../assets/fonts/GothamRnd-Light.otf")
          ],
          /* :: */[
            /* tuple */[
              "GothamRnd Medium",
              require("../assets/fonts/GothamRnd-Medium.otf")
            ],
            /* :: */[
              /* tuple */[
                "Gotham Bold",
                require("../assets/fonts/GothamRnd-Bold.otf")
              ],
              /* [] */0
            ]
          ]
        ]));

function getInputValue(e) {
  return e.target.value;
}

function getSyntheticInputValue(e) {
  return e.target.value;
}

function extractMessageFrom($$event) {
  return $$event.value.data.onCreateMessage.message;
}

function parseJsonConvertJsObj(str) {
  return JSON.parse(str);
}

function parseStrConvertJsObj(str) {
  return JSON.parse(str);
}

export {
  nullableToOption ,
  namespace ,
  UserSession ,
  sortCreatedBy ,
  getUsernameFromStorage ,
  loadFonts ,
  getInputValue ,
  getSyntheticInputValue ,
  extractMessageFrom ,
  parseJsonConvertJsObj ,
  parseStrConvertJsObj ,
  
}
/* getToken Not a pure module */
