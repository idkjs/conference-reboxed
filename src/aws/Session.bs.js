// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Auth from "./Auth.bs.js";
import * as Utils from "../utils/Utils.bs.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as PromiseMonad from "bs-promise-monad/src/PromiseMonad.bs.js";
import * as ReactNative from "react-native";

var session = {
  complexObjectCredentials: "",
  jwtToken: "",
  username: "",
  email: ""
};

function getToken(param) {
  return session.jwtToken;
}

function getUser(param) {
  return session.username;
}

function getEmail(param) {
  return session.email;
}

function getComplex(param) {
  return session.complexObjectCredentials;
}

function setToken(v) {
  session.jwtToken = v;
  return ReactNative.AsyncStorage.setItem(Utils.namespace + "token", v);
}

function setUser(v) {
  session.username = v;
  return ReactNative.AsyncStorage.setItem(Utils.namespace + "username", v);
}

function setEmail(v) {
  session.email = v;
  return ReactNative.AsyncStorage.setItem(Utils.namespace + "email", v);
}

function setComplex(v) {
  session.complexObjectCredentials = v;
  return ReactNative.AsyncStorage.setItem(Utils.namespace + "complex", v);
}

var setSession = PromiseMonad.$great$great$eq(Auth.getCurrentAuthUser(/* () */0), (function (response) {
        var jwtToken = Belt_Option.getWithDefault(Belt_Option.flatMap(Belt_Option.flatMap(response.signInUserSession, (function (session) {
                        return session.accessToken;
                      })), (function (accessToken) {
                    return accessToken.jwtToken;
                  })), "");
        var userSession = Belt_Option.getExn(JSON.stringify(response.signInUserSession));
        setToken(jwtToken);
        var username = Belt_Option.getWithDefault(response.username, "");
        setUser(username);
        var email = Belt_Option.getWithDefault(Belt_Option.flatMap(Belt_Option.flatMap(Belt_Option.flatMap(response.signInUserSession, (function (session) {
                            return session.idToken;
                          })), (function (idToken) {
                        return idToken.payload;
                      })), (function (payload) {
                    return payload.email;
                  })), "");
        setEmail(email);
        setComplex(userSession);
        return PromiseMonad.$$return(session);
      }));

export {
  session ,
  getToken ,
  getUser ,
  getEmail ,
  getComplex ,
  setToken ,
  setUser ,
  setEmail ,
  setComplex ,
  setSession ,
  
}
/* setSession Not a pure module */
